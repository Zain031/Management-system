version: '3.8'

services:
  db:
    image: postgres:15.2
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5431:5432"
    networks:
      - app-network

  backend:
    build:
      context: ./BackEnd/ManagementSystem
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      APP_NAME: ${APP_NAME}
      APP_PORT: ${APP_PORT}
      DB_URL: ${DB_URL}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_APP_NAME: ${JWT_APP_NAME}
      JWT_EXPIRE_TIME: ${JWT_EXPIRE_TIME}
      DDL_AUTO: ${DDL_AUTO}
      SHOW_SQL: ${SHOW_SQL}
      API_DOCS: ${API_DOCS}
      MIDTRANS_SERVER_KEY: ${MIDTRANS_SERVER_KEY}
      MIDTRANS_IS_PRODUCTION: ${MIDTRANS_IS_PRODUCTION}
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ./BackEnd/ManagementSystem/src/main/resources/static/assets:/app/src/main/resources/static/assets
      - ./sql:/app/sql  # Mount folder sql ke dalam kontainer
    networks:
      - app-network
    command: >
      sh -c "until pg_isready -h db -p 5432; do sleep 2; done; 
      psql -h db -U ${DB_USER} -d ${DB_NAME} -f /app/sql/init.sql; 
      java -jar app.jar"  # Menjalankan skrip SQL setelah backend siap

  frontend:
    build:
      context: ./Frontend/Management system
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    env_file:
      - .env
    networks:
      - app-network

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge
